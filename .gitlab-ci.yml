variables:
    DOCKER_DRIVER: overlay2
    DOCKER_HOST: "tcp://docker:2375"
    DOCKER_TLS_CERTDIR: "/certs"
    MYSQL_ROOT_PASSWORD: root
    MYSQL_USER: app
    MYSQL_PASSWORD: app
    MYSQL_DATABASE: shopware
    WEB_DOCUMENT_ROOT: $CI_PROJECT_DIR/
    GIT_STRATEGY: clone
    SHOPWARE_ENV: swagimportexporttest
    CHECKOUT_SHOPWARE_BRANCH: "5.7"
    PLUGIN_NAME: SwagImportExport

stages:
    - Code Analysis
    - PHPUnit

default:
    tags:
        - t3.medium
    image: gitlab.shopware.com:5005/shopware/5/product/image/continuous:7.4
    services:
        -   name: mysql:5.7
            alias: mysql
    interruptible: true
    before_script:
        - zip -rq plugin.zip .
        - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.shopware.com/shopware/5/product/shopware.git shopware --depth=1 -b ${CHECKOUT_SHOPWARE_BRANCH}
        - unzip -q plugin.zip -d shopware/custom/plugins/${PLUGIN_NAME}
        - (cd shopware/custom/plugins/${PLUGIN_NAME} && composer install)
        - cd shopware
        - cp .env.dist .env
        - composer update laminas/laminas-code
        - composer config --no-plugins allow-plugins.phpstan/extension-installer true
        - make init
        - cp -r custom/plugins/${PLUGIN_NAME}/Tests/config_gitlab.php config.php
        - php bin/console sw:plugin:refresh
        - php bin/console sw:plugin:list
        - php bin/console sw:plugin:install --activate ${PLUGIN_NAME}
        - php bin/console sw:cache:clear
        - /entrypoint supervisord &>/dev/null &

JavaScript analyze:
    stage: Code Analysis
    image: node:alpine
    services: []
    before_script:
        - apk add --no-cache make bash zip unzip git
        - zip -rq plugin.zip .
        - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.shopware.com/shopware/5/product/shopware.git shopware --depth=1 -b ${CHECKOUT_SHOPWARE_BRANCH}
        - unzip -q plugin.zip -d shopware/custom/plugins/${PLUGIN_NAME}
    script:
        - cd shopware
        - make .make.install.npm-dependencies
        - cd custom/plugins/${PLUGIN_NAME}
        - make check-eslint-backend

PHP analyze:
    stage: Code Analysis
    script:
        - php bin/console -e production
        - cd custom/plugins/${PLUGIN_NAME}
        - >
            if [ $CI_PIPELINE_SOURCE == "schedule" ]; then
                sed -i "s|reportUnmatchedIgnoredErrors: true|reportUnmatchedIgnoredErrors: false|g" phpstan.neon
            fi
        - make fix-cs-dry
        - make phpstan

Code Coverage:
    stage: PHPUnit
    needs: [ PHP analyze ]
    script:
        - cd custom/plugins/${PLUGIN_NAME}
        - php -d pcov.enabled=1 -d pcov.directory=$CI_PROJECT_DIR
            ./../../../vendor/bin/phpunit
            --configuration phpunit.xml.dist
            --log-junit build/artifacts/phpunit.junit.xml
            --colors=never
            --coverage-text=build/artifacts/phpunit-coverage-text
        - cat build/artifacts/phpunit-coverage-text | sed -e '/\\Shopware\\.*/d' -e '/\s*Methods:\s*\d*/d'
    coverage: '/^\s*Lines:\s*(\d+(?:\.\d+)?%)/'
    artifacts:
        paths:
            - shopware/custom/plugins/${PLUGIN_NAME}/build/artifacts/*
        reports:
            junit: shopware/custom/plugins/${PLUGIN_NAME}/build/artifacts/phpunit.junit.xml

.SW 5.7 default:
    stage: PHPUnit
    needs: [PHP analyze]
    script:
        - cd custom/plugins/${PLUGIN_NAME}
        - php ./../../../vendor/bin/phpunit
            --configuration phpunit.xml.dist
            --colors=never

SW 5.7 PHP 7.4:
    extends: .SW 5.7 default
    only:
        - master

SW 5.7 PHP 8.2:
    extends: .SW 5.7 default
    image: gitlab.shopware.com:5005/shopware/5/product/image/continuous:8.2

SW 5.7.4:
    variables:
        CHECKOUT_SHOPWARE_BRANCH: v5.7.4
    extends: .SW 5.7 default
